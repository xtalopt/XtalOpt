# Anything to the right of a '#' is a comment

# Initialization settings
  # Composition settings
      chemicalFormulas = Ti2O4 - Ti4O8

  # Reference energies (not necessary for fixed-composition search)
    #referenceEnergies = Ti3 -14.18719749, O4 -10.19855357

  # Search type
    #vcSearch = false

  # System size limit
    #maxAtoms = 20

  # Global optimization settings
    #optimizationType = basic
    #tournamentSelection = true
    #restrictedPool = false
    #crowdingDistance = true
    #objectivePrecision = -1

  # Lattice constraints
    # Lattice length minima and maxima (Angstroms)
      aMin = 3.0
      bMin = 3.0
      cMin = 3.0
      aMax = 10.0
      bMax = 10.0
      cMax = 10.0

    # Lattice angle minima and maxima (Degrees)
      alphaMin = 60.0
      betaMin  = 60.0
      gammaMin = 60.0
      alphaMax = 120.0
      betaMax  = 120.0
      gammaMax = 120.0

    # Volume limits (applied in the following order)
    # Elemental volumes (min/max in Angstroms cubed per cell for all elements)
      #elementalVolumes = Ti1 30 50, O2 40 60
    # Scaled volume limits (factor of equivalent vdW spheres for all atoms)
      #minVolumeScale = 0.0
      #maxVolumeScale = 0.0
    # Absolute min and max limits (Angstroms cubed per atom)
      minVolume = 1.0
      maxVolume = 100.0

  # Atomic radii
    # Ensure that atoms are distanced such that their covalent radii do not
    # overlap. Note, this option and "usingCustomIADs" cannot both be true.
      usingRadiiInteratomicDistanceLimit = true
    # Scale all covalent radii by this number
      radiiScalingFactor = 0.5
    # Minimum radius for any given atom (Angstroms)
      minRadius = 0.25

  # Use custom interatomic distances? Note: this option and
  # "usingRadiiInteratomicDistanceLimit" cannot both be true.
    #usingCustomIADs = false
  # Custom IAD entries appear as follows:
    # customIAD <atomicSymbol1>, <atomicSymbol2>, <minIAD>
    #customIAD 1 = Ti, O, 1.45

  # Check IADs after optimization?
    #checkIADPostOptimization = false

  # Initialize molecular units?
    #usingMolecularUnits = false
    # The geometry type must be valid for the number of neighbors. If
    # you run an invalid one, it will print to you the ones that are valid.

    # Molecular Unit entries appear as follows:
    # <centerAtomicSymbol>, <numCenters>, <neighborAtomicSymbol>,
    # <numNeighbors>, <geometry>, <distance>
    #molecularUnits 1 = Ti, 1, O, 4, tetrahedral, 1.320
    #molecularUnits 2 = O, 1, O, 1, linear, 1.000

  # Initialize all crystals with symmetry? (space groups are randomly selected)
    #usingRandSpg = false
  # We can put down a list of space groups to be generated for sure per FU.
  # You must comma-separate each space group (no hyphens allowed). If you
  # want more of a single space group, repeat it like 136 below.
    #forcedSpgsWithRandSpg = 1, 2, 136, 136, 136

  # Custom user-defined keywords
    #user1 =
    #user2 =
    #user3 =
    #user4 =


# End of initialization settings

# Search settings
  # Search parameters
    numInitial = 0
    parentsPoolSize = 20
    limitRunningJobs = true
    runningJobLimit = 1
    continuousStructures = 15

  # Maximum number of structures to be generated
    maxNumStructures = 100

  # Number of failures for a job before we take action
    jobFailLimit = 1
  # What to do after a job has failed too many times
  # Options: keepTrying, kill, replaceWithRandom, replaceWithOffspring
    jobFailAction = replaceWithRandom

  # Mutators
  # Percent chances of producing a supercell after genetic operations
    #randomSupercell = 0

  # Relative weight of applying genetic operations - need to be integers
    weightCrossover = 35
    weightStripple = 25
    weightPermustrain = 25
    weightPermutomic = 15
    weightPermucomp = 5

  # Stripple options
    strippleAmplitudeMin = 0.5
    strippleAmplitudeMax = 1.0
    strippleNumWavesAxis1 = 1
    strippleNumWavesAxis2 = 1
    strippleStrainStdevMin = 0.5
    strippleStrainStdevMax = 0.5

  # Permustrain options
    permustrainNumExchanges = 4
    permustrainStrainStdevMax = 0.5

  # Crossover options
    crossoverMinContribution = 25
    crossoverCuts = 1

  # Multi-objective search (and objectives)
    #objective = min path/script1 outputfile1 weight1
    #objective = max path/script2 outputfile2 weight2
    #objective = fil path/script3 outputfile3 0.0
    #objectivesReDo = false

  # Similarity check
  # By default, XtalComp is used; unless the rdf tolerance is > 0
  # XtalComp
    # Angstroms
      xtalcompToleranceLength = 0.1
    # Degrees
      xtalcompToleranceAngle = 2.0
  # RDF
    # Similarity tolerance in [0, 1] range
      rdfTolerance = 0.0
    # Bond length cutoff
      rdfCutoff = 6.0
    # Gaussian spread
      rdfSigma = 0.008
    # Number of bins
      rdfNumBins = 3000

  # Space group detection tolerance
    spglibTolerance = 0.01

  # Seed structures
  # List of initial seed structures
    #seedStructures = /path1/seed1 , /path2/seed2

  # Run termination and output
  # Finish the run after max number of structures are produces
    #softExit = true
  # Finish the run as soon as this "run-time flag" is set
    #hardExit = true

  # Output of the run
  # Produce a verbose output (i.e., debug-like information)
    #verboseOutput = true
  # Save a copy of the convex hull to 'movie' folder after each optimization
    #saveHullSnapshots = false

# End of search settings

# The directory in which to find all the templates
# (for both the optimizer and the queue interface files)
  templatesDirectory = ./templates/gulp

# Queue interface settings
  # What type of queue interface? Options are local, pbs, sge, slurm, lsf,
  # and loadleveler. All are remote except for 'local'.
    queueInterface = local

  # If we want to run XtalOpt locall, but submit jobs to queue, then
  # a remote queue must be specified in queue interface, along with
  # the following flag:
    #localQueue = true

  # Where to save the data locally?
    localWorkingDirectory = ./localWorkingDirectory

  # Copy the jobs that failed into errorDirs in the local working directory
  # for future analysis?
    logErrorDirectories = false

  # Number of optimization steps. You must supply templates for every
  # optimization step. An error message will be printed if you do not.
    numOptimizationSteps = 1

  # Remote queue interface settings (will be ignored for local runs)
    host = rush.ccr.buffalo.edu
    port = 22
    user = psavery

    # Where to save and submit the jobs on the host?
      remoteWorkingDirectory = /path/to/dir/xtalopt-runs/test

    # For these, you may specify the location of each command on the remote host
    # submitCommand for slurm is sbatch, for pbs it is qsub, etc.
      submitCommand = sbatch
    # cancelCommand for slurm is scancel, for pbs it is qdel, etc.
      cancelCommand = scancel
    # statusCommand for slurm is squeue, for pbs it is qstat, etc.
      statusCommand = squeue

    # How often do we analyze and/or submit jobs in the queue (in seconds)?
      queueRefreshInterval = 10

    # Clean the remote directories when finished?
      cleanRemoteDirs = false

    # Submission script templates (need to be in the templatesDir)
    # For multiple jobs, comma separation works. Must be equal to the
    # number of optimization steps
      jobTemplates = job1, job2, job3

    # Autocancel job settings
      #autoCancelJobAfterTime = false
      #hoursForAutoCancelJob = 100.0

# End of queue interface settings

# Optimizer settings
  # What type of optimizer are we using? Options are gulp, vasp, pwscf,
  # castep, and siesta
    optimizer = gulp

  # Location of the executable (only applicable for local queue interfaces)
  # The value can be arbitrarily formatted, according to the code, e.g. "castep xtal"
    exeLocation = gulp

  # In these templates, there are special characters used like %a% for the
  # A vector length. Look up the XtalOpt manual for a complete listing.

  # GULP templates (only for optimizer = gulp)
    ginTemplates = gin1

  # VASP templates (only for optimizer = vasp)
    #incarTemplates = incar1, incar2, incar3
    #kpointsTemplates = kpoints1, kpoints2, kpoints3

    # For each element, you need to specify a separate line for its POTCAR
    # For example, TiO2 would look like this:
      #potcarFile Ti = /home/user/vasp_potcars/Ti/POTCAR
      #potcarFile O = /home/user/vasp_potcars/O/POTCAR
    # Or, if POTCARs are combined (in alphabetical order for element names),
    # a single file can be introduced for the system as:
      #potcarFile system = /home/user/vasp_potcars/POTCAR

  # PWSCF templates (only for optimizer = pwscf)
    #pwscfTemplates = pwscf1, pwscf2, pwscf3

  # CASTEP emplates (only for optimizer = castep)
    #castepCellTemplates = cell1, cell2, cell3
    #castepParamTemplates = param1, param2, param3

  # SIESTA templates (only for optimizer = siesta)
    #fdfTemplates = fdf1, fdf2, fdf3

  # MTP templates (only for optimizer = mtp)
    #mtpCellTemplates = cell1
    #mtpPotTemplates = pot1
    #mtpRelaxTemplates = relax1

# End of optimizer settings
